"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const fs = require("fs");
const path = require("path");
const _ = require("lodash");
class HierarchicalJsonToArbConverter {
    constructor(directoryWithJsonFiles, outputDir, lastModified = new Date().toISOString()) {
        this.directoryWithJsonFiles = directoryWithJsonFiles;
        this.outputDir = outputDir;
        this.lastModified = lastModified;
    }
    convertToArb() {
        const jsonFiles = fs
            .readdirSync(this.directoryWithJsonFiles)
            .filter(file => _.endsWith(file, ".json"));
        jsonFiles.map(file => {
            const filename = _.replace(file, ".json", ".arb");
            const jsonInString = fs.readFileSync(path.join(this.directoryWithJsonFiles, file), "utf8");
            this.convertJsonToArb(jsonInString, filename);
        });
    }
    convertJsonToArb(jsonInString, filename) {
        const jsonContent = JSON.parse(jsonInString);
        const resourceIds = Object.keys(jsonContent);
        let resources = {};
        resources["@@last_modified"] = this.lastModified;
        resources["@@author"] = "arb-converter-cli";
        resourceIds.forEach(id => {
            resources[id] = jsonContent[id];
        });
        const arbContent = JSON.stringify(resources);
        if (!fs.existsSync(this.outputDir)) {
            fs.mkdirSync(this.outputDir);
        }
        fs.writeFileSync(path.join(this.outputDir, filename), arbContent);
    }
}
exports.HierarchicalJsonToArbConverter = HierarchicalJsonToArbConverter;
//# sourceMappingURL=hierarchical-json-to-arb.converter.js.map